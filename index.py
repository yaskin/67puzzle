import numpy as np
from scipy.interpolate import interp1d, CubicSpline
import matplotlib.pyplot as plt

# Данные
x_values = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27])
y_values = np.array([1003651412950, 1458252205147, 2895374552463, 7409811047825, 15404761757071, 19996463086597,
                     51408670348612, 119666659114170, 191206974700443, 409118905032525, 611140496167764, 
                     2058769515153876, 4216495639600700, 6763683971478124, 9974455244496707, 30045390491869460, 
                     44218742292676575, 66188164872918556, 199976667976342049, 525070384258266191, 
                     1135041350219496382, 1425787542618654982, 3908372542507822062, 8993229949524469768, 
                     17799667357578236628, 30568377312064202855, 46346217550346335726])

# Сплайн-интерполяция
spline = CubicSpline(x_values, y_values)

# Прогноз для x=27 и x=28
y_27 = spline(27)
y_28 = spline(28)

# Выводим результаты
print(f"Прогнозное значение y для x=27: {y_27:.2f}")
print(f"Прогнозное значение y для x=28: {y_28:.2f}")

# График
x_range = np.linspace(1, 28, 500)
plt.scatter(x_values, y_values, label="Исходные данные", color="blue")
plt.plot(x_range, spline(x_range), label="Сплайн-интерполяция", color="red")
plt.legend()
plt.xlabel("x")
plt.ylabel("y")
plt.yscale("log")  # Логарифмическая шкала
plt.title("Сплайн-интерполяция для прогнозирования")
plt.show()
